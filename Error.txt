Error in line {}:

Invalid Opcode found at Line {}
Invalid Register name found at Line {}
Invalid operand found at Line {}
Invalid Immediate Value found at Line {}
Invalid Memory Address found at Line {}
Incomplete Instruction Error at Line {}
Unsupported Instruction at Line {}
File read error
ValueError
IndexError
Indentation Error
Variable used as label at Line {}. Use a valid label name
Invalid operation found at Line {}
Key error
Variable unitialized at Line {}

Overflow Error:
Addition overflow exceeding 32-bits
Subtraction underflow at Line {}

Syntax error in line {}:
Invalid label syntax found at Line {}
Mismatched operand syntax found at Line {}
Missing operand found at Line {}
Invalid label syntax:
Duplicate Label error at Line {}
Undefined Label Error found at Line {}

if l[0] in r_type_instructions.keys():
    bintemp = ""
    registers = [reg.strip(",") for reg in l[1:]]
    if len(registers) != 3:
        # Invalid operand count error
    # Error: Incorrect format for register operands
    if any("," not in reg for reg in registers):
        # Invalid operand syntax error
    bintemp += r_type_instructions[l[0]]["funct7"]
    # Error: Invalid register name
    # Error: Register not found in register_encoding
    if registers[2].split(",")[2] not in register_encoding:
        # Invalid register name error
    bintemp += register_encoding[registers[2].split(",")[2]]
    # Error: Invalid register name
    # Error: Register not found in register_encoding
    if registers[1].split(",")[1] not in register_encoding: # Invalid register name error
    bintemp += register_encoding[registers[1].split(",")[1]]
    bintemp += r_type_instructions[l[0]]["funct3"]
    # Error: Invalid register name 
    # Error: Register not found in register_encoding
    if registers[0].split(",")[0] not in register_encoding:
        # Invalid register name error
    bintemp += register_encoding[registers[0].split(",")[0]]
    bintemp += r_type_instructions[l[0]]["opcode"]
